'''
Some examples for LSH
'''

from hashlib import sha1
import numpy as np
import json
from datasketch.minhash import MinHash
from datasketch.weighted_minhash import WeightedMinHashGenerator
from datasketch.lsh import MinHashLSH
from utils.db_utils import postgres_db

set1 = set(['minhash', 'is', 'a', 'probabilistic', 'data', 'structure', 'for',
            'estimating', 'the', 'similarity', 'between', 'datasets'])
set2 = set(['minhash', 'is', 'a', 'probability', 'data', 'structure', 'for',
            'estimating', 'the', 'similarity', 'between', 'documents'])
set3 = set(['minhash', 'is', 'probability', 'data', 'structure', 'for',
            'estimating', 'the', 'similarity', 'between', 'documents'])

set1 = set([-0.06653771549463272, 0.11146444082260132, 0.12440238893032074, -0.03164754807949066, -0.07741986960172653, -0.052251528948545456, -0.0452718660235405, -0.12470222264528275, 0.13816797733306885, -0.1152077317237854, 0.30777010321617126, -0.05984947085380554, -0.22960340976715088, -0.06158236414194107, -0.0368158295750618, 0.13717320561408997, -0.1720796525478363, -0.054847318679094315, 0.03207693248987198, -0.016324982047080994, 0.09520047903060913, -0.05028649419546127, 0.06936555355787277, 0.01444101333618164, -0.10460524260997772, -0.4248502850532532, -0.16103540360927582, -0.12525387108325958, 0.03820095211267471, -0.07820531725883484, -0.07559949159622192, 0.041290223598480225, -0.18277162313461304, -0.04992262274026871, -0.04785884916782379, 0.03455768898129463, -0.02554512768983841, -0.09900963306427002, 0.19031216204166412, 0.026386963203549385, -0.12277176976203918, 0.029416918754577637, -0.04534045606851578, 0.2189793586730957, 0.12152285128831863, 0.05403172969818115, 0.11551205813884735, -0.10862165689468384, 0.06065893918275833, -0.11007172614336014, 0.05542479455471039, 0.11487678438425064, 0.06607837229967117, 0.0483563169836998, -0.01173054426908493, -0.1539774388074875, 0.026989340782165527, 0.04025784879922867, -0.19124165177345276, 0.04079391434788704, 0.08694103360176086, -0.09753528237342834, -0.05202677845954895, -0.0361427366733551, 0.2763848900794983, 0.11055128276348114, -0.09807266294956207, -0.10787709802389145, 0.1593283861875534, -0.09044744819402695, -0.014550719410181046, -0.013175759464502335, -0.1954842507839203, -0.17338010668754578, -0.2335323840379715, 0.09246896207332611, 0.36300235986709595, 0.09598186612129211, -0.17719700932502747, 0.053821999579668045, -0.11677977442741394, -0.012124978005886078, 0.10209283232688904, 0.1530897617340088, -0.008745644241571426, 0.05082784593105316, -0.08224072307348251, 0.0614226758480072, 0.1501639038324356, -0.09588664770126343, -0.04987918213009834, 0.21729464828968048, -0.050959691405296326, 0.10210547596216202, 0.04017883539199829, -0.01896556466817856, -0.093389593064785, 0.03875189274549484, -0.08343469351530075, 0.025276564061641693, 0.05463620275259018, -0.07922526448965073, -0.06038445234298706, 0.05905422568321228, -0.17931686341762543, 0.0898800939321518, -0.012743934988975525, -0.03877785801887512, -0.004718668758869171, -0.06470093131065369, -0.131295308470726, -0.04685156047344208, 0.13748934864997864, -0.28045785427093506, 0.23786547780036926, 0.2017388641834259, 0.052667610347270966, 0.1870713084936142, 0.09802237153053284, 0.07056915760040283, 0.02252197265625, -0.045353963971138, -0.19393855333328247, -0.017421327531337738, 0.11406006664037704, 0.008461438119411469, 0.0672500729560852, -0.012140557169914246][:50])
set2 = set([-0.06653771549463272, 0.11146444082260132, 0.12440238893032074, -0.03164754807949066, -0.07741986960172653, -0.052251528948545456, -0.0452718660235405, -0.12470222264528275, 0.13816797733306885, -0.1152077317237854, 0.30777010321617126, -0.05984947085380554, -0.22960340976715088, -0.06158236414194107, -0.0368158295750618, 0.13717320561408997, -0.1720796525478363, -0.054847318679094315, 0.03207693248987198, -0.016324982047080994, 0.09520047903060913, -0.05028649419546127, 0.06936555355787277, 0.01444101333618164, -0.10460524260997772, -0.4248502850532532, -0.16103540360927582, -0.12525387108325958, 0.03820095211267471, -0.07820531725883484, -0.07559949159622192, 0.041290223598480225, -0.18277162313461304, -0.04992262274026871, -0.04785884916782379, 0.03455768898129463, -0.02554512768983841, -0.09900963306427002, 0.19031216204166412, 0.026386963203549385, -0.12277176976203918, 0.029416918754577637, -0.04534045606851578, 0.2189793586730957, 0.12152285128831863, 0.05403172969818115, 0.11551205813884735, -0.10862165689468384, 0.06065893918275833, -0.11007172614336014, 0.05542479455471039, 0.11487678438425064, 0.06607837229967117, 0.0483563169836998, -0.01173054426908493, -0.1539774388074875, 0.026989340782165527, 0.04025784879922867, -0.19124165177345276, 0.04079391434788704, 0.08694103360176086, -0.09753528237342834, -0.05202677845954895, -0.0361427366733551, 0.2763848900794983, 0.11055128276348114, -0.09807266294956207, -0.10787709802389145, 0.1593283861875534, -0.09044744819402695, -0.014550719410181046, -0.013175759464502335, -0.1954842507839203, -0.17338010668754578, -0.2335323840379715, 0.09246896207332611, 0.36300235986709595, 0.09598186612129211, -0.17719700932502747, 0.053821999579668045, -0.11677977442741394, -0.012124978005886078, 0.10209283232688904, 0.1530897617340088, -0.008745644241571426, 0.05082784593105316, -0.08224072307348251, 0.0614226758480072, 0.1501639038324356, -0.09588664770126343, -0.04987918213009834, 0.21729464828968048, -0.050959691405296326, 0.10210547596216202, 0.04017883539199829, -0.01896556466817856, -0.093389593064785, 0.03875189274549484, -0.08343469351530075, 0.025276564061641693, 0.05463620275259018, -0.07922526448965073, -0.06038445234298706, 0.05905422568321228, -0.17931686341762543, 0.0898800939321518, -0.012743934988975525, -0.03877785801887512, -0.004718668758869171, -0.06470093131065369, -0.131295308470726, -0.04685156047344208, 0.13748934864997864, -0.28045785427093506, 0.23786547780036926, 0.2017388641834259, 0.052667610347270966, 0.1870713084936142, 0.09802237153053284, 0.07056915760040283, 0.02252197265625, -0.045353963971138, -0.19393855333328247, -0.017421327531337738, 0.11406006664037704, 0.008461438119411469, 0.0672500729560852, -0.012140557169914246][:50])
set3 = set([-0.12717530131340027, 0.06872853636741638, 0.08179943263530731, 0.013176612555980682, -0.09503861516714096, -0.08196950703859329, -0.051403455436229706, -0.0915319174528122, 0.14077764749526978, -0.009482508525252342, 0.26788899302482605, -0.020975198596715927, -0.20867682993412018, -0.17215465009212494, -0.003972873091697693, 0.16416075825691223, -0.13009755313396454, -0.11836547404527664, -0.059880055487155914, -0.06341136246919632, 0.061979301273822784, 0.046455513685941696, 0.09351547062397003, -0.02058955281972885, -0.14488118886947632, -0.42376112937927246, -0.03926325961947441, -0.10312163829803467, 0.021039336919784546, -0.03712156414985657, -0.009145956486463547, 0.1091756522655487, -0.15051282942295074, -0.06798839569091797, 0.07690386474132538, 0.11845752596855164, 0.01137525588274002, -0.03593837097287178, 0.1718195378780365, -0.02553662285208702, -0.23008310794830322, -0.04013839364051819, 0.029982633888721466, 0.2496514618396759, 0.19133809208869934, 0.0508095920085907, 0.06554662436246872, -0.07735331356525421, 0.0992165133357048, -0.16411399841308594, 0.03261806070804596, 0.13738484680652618, 0.06563989073038101, -0.0247032567858696, 0.039309434592723846, -0.10961887240409851, 0.04552909731864929, 0.09149322658777237, -0.2173960655927658, -0.01793212816119194, 0.054500989615917206, -0.15879788994789124, -0.08329319953918457, -0.008293502032756805, 0.22352203726768494, 0.10425275564193726, -0.09573318064212799, -0.15082517266273499, 0.11873839050531387, -0.12687553465366364, -0.0703478679060936, 0.04041879624128342, -0.18718263506889343, -0.14755329489707947, -0.3708004951477051, -0.014899447560310364, 0.4775996804237366, 0.017912868410348892, -0.20240095257759094, 0.0797768086194992, -0.01073446124792099, 0.035828493535518646, 0.12228807806968689, 0.1662643849849701, -0.07295060902833939, 0.01692754030227661, -0.1552443653345108, 0.008843347430229187, 0.16969522833824158, -0.06118679791688919, -0.09185432642698288, 0.15134942531585693, -0.019034206867218018, 0.09273044764995575, 0.05905219912528992, 0.03181018680334091, -0.05830773711204529, 0.01920958422124386, -0.06801381707191467, -0.05451669543981552, 0.13054659962654114, -0.029426977038383484, 0.03213457018136978, 0.08838701248168945, -0.1404508650302887, 0.096944160759449, -0.003167875111103058, 0.06104641407728195, 0.07107262313365936, -0.031523436307907104, -0.013469457626342773, -0.0855851098895073, 0.09214062988758087, -0.20271533727645874, 0.21845710277557373, 0.17651718854904175, 0.014520872384309769, 0.17357279360294342, 0.08019989728927612, 0.06103072315454483, -0.01251991093158722, 0.03681445121765137, -0.14724037051200867, -0.03923211246728897, 0.020990382879972458, -0.012743741273880005, 0.11311393976211548, 0.02206813544034958][:50])
# set2 = set([-0.10818610340356827, 0.061793114989995956, 0.10443182289600372, -0.025762030854821205, -0.054376378655433655, -0.058817341923713684, -0.018570004031062126, -0.14551867544651031, 0.13862840831279755, -0.11819654703140259, 0.3333266079425812, -0.04733804240822792, -0.19201144576072693, -0.06799367070198059, -0.033248595893383026, 0.1354140341281891, -0.17730455100536346, -0.05933719128370285, 0.015524938702583313, -0.007140025496482849, 0.05607728287577629, -0.06126295030117035, 0.0533626526594162, 0.032404884696006775, -0.10358387231826782, -0.40921634435653687, -0.19017145037651062, -0.17525614798069, 0.03437383472919464, -0.07075603306293488, -0.06728393584489822, 0.04092974215745926, -0.18109996616840363, -0.04179956763982773, -0.056852929294109344, -0.0007494427263736725, -0.008893735706806183, -0.06598588824272156, 0.21119078993797302, 0.009265588596463203, -0.1263294816017151, 0.03035205602645874, -0.04011997580528259, 0.22748549282550812, 0.13897705078125, 0.026835734024643898, 0.08795306086540222, -0.08343619108200073, 0.053270816802978516, -0.11216077208518982, 0.06407283991575241, 0.08014809340238571, 0.10371460020542145, 0.04222647845745087, -0.03204099088907242, -0.13273724913597107, 0.013892441987991333, 0.027813207358121872, -0.19283932447433472, 0.05840776860713959, 0.08118121325969696, -0.11551811546087265, -0.07579673081636429, -0.004973031580448151, 0.27939099073410034, 0.1210520938038826, -0.10977587103843689, -0.09369450062513351, 0.18086251616477966, -0.09577528387308121, 0.01978939026594162, -0.01530250534415245, -0.20492157340049744, -0.19295920431613922, -0.22863683104515076, 0.10985171794891357, 0.37612462043762207, 0.07333590090274811, -0.18955332040786743, 0.05801187455654144, -0.13705939054489136, -0.014486581087112427, 0.08747752755880356, 0.13446742296218872, -0.010242141783237457, 0.028264567255973816, -0.0703994631767273, 0.06722244620323181, 0.15069462358951569, -0.08585315942764282, -0.026568714529275894, 0.22758440673351288, -0.06773745268583298, 0.07722362875938416, 0.04995664954185486, -0.004340067505836487, -0.044224813580513, 0.013701178133487701, -0.06633825600147247, 0.05732321739196777, 0.04789762943983078, -0.07709620147943497, -0.052470386028289795, 0.05125884711742401, -0.18189400434494019, 0.09857641905546188, -0.0020963549613952637, -0.032085563987493515, 0.011380903422832489, -0.05666735768318176, -0.11868960410356522, -0.060908928513526917, 0.14693807065486908, -0.2680917978286743, 0.23130962252616882, 0.17751869559288025, 0.04255646467208862, 0.1858931928873062, 0.06102152168750763, 0.06893960386514664, -0.0031054913997650146, -0.03369441628456116, -0.21730098128318787, 0.009906644001603127, 0.13160167634487152, -0.007090918719768524, 0.05884227156639099, -0.003346383571624756])
set1 = set([str(i) for i in set1])
set2 = set([str(i) for i in set2])
set3 = set([str(i) for i in set3])


v1 = np.random.uniform(1, 10, 10)
v2 = np.random.uniform(1, 10, 10)
v3 = np.random.uniform(1, 10, 10)

def eg1():
    m1 = MinHash(num_perm=128)
    m2 = MinHash(num_perm=128)
    m3 = MinHash(num_perm=128)
    for d in set1:
        # hashlized
        m1.update(d.encode('utf8'))
    for d in set2:
        m2.update(d.encode('utf8'))
    for d in set3:
        m3.update(d.encode('utf8'))

    # Create LSH index
    lsh = MinHashLSH(threshold=0.5, num_perm=128)
    lsh.insert("m2", m2)
    lsh.insert("m3", m3)
    result = lsh.query(m1)
    print("Approximate neighbours with Jaccard similarity > 0.5", result)


def eg2():
    mg = WeightedMinHashGenerator(10, 5)
    m1 = mg.minhash(v1)
    m2 = mg.minhash(v2)
    m3 = mg.minhash(v3)
    print("Estimated Jaccard m1, m2", m1.jaccard(m2))
    print("Estimated Jaccard m1, m3", m1.jaccard(m3))
    # Create LSH index
    lsh = MinHashLSH(threshold=0.1, num_perm=5)
    lsh.insert("m2", m2)
    lsh.insert("m3", m3)
    result = lsh.query(m1)
    print("Approximate neighbours with weighted Jaccard similarity > 0.1", result)

if __name__ == "__main__":
    eg1()
    # eg2()

    results = postgres_db.get_record()
    # print(results[])

    lsh = MinHashLSH(threshold=0.1, num_perm=128)
    for re in results:
        en_list = (json.loads([re[2]][0]))
        print(en_list)
        m = MinHash(num_perm=128)
        for d in en_list:
            m.update(int(d*10**16).encode('utf8'))
        lsh.insert(re[3], m)

    m_test_str = [[-0.06653771549463272, 0.11146444082260132, 0.12440238893032074, -0.03164754807949066, -0.07741986960172653, -0.052251528948545456, -0.0452718660235405, -0.12470222264528275, 0.13816797733306885, -0.1152077317237854, 0.30777010321617126, -0.05984947085380554, -0.22960340976715088, -0.06158236414194107, -0.0368158295750618, 0.13717320561408997, -0.1720796525478363, -0.054847318679094315, 0.03207693248987198, -0.016324982047080994, 0.09520047903060913, -0.05028649419546127, 0.06936555355787277, 0.01444101333618164, -0.10460524260997772, -0.4248502850532532, -0.16103540360927582, -0.12525387108325958, 0.03820095211267471, -0.07820531725883484, -0.07559949159622192, 0.041290223598480225, -0.18277162313461304, -0.04992262274026871, -0.04785884916782379, 0.03455768898129463, -0.02554512768983841, -0.09900963306427002, 0.19031216204166412, 0.026386963203549385, -0.12277176976203918, 0.029416918754577637, -0.04534045606851578, 0.2189793586730957, 0.12152285128831863, 0.05403172969818115, 0.11551205813884735, -0.10862165689468384, 0.06065893918275833, -0.11007172614336014, 0.05542479455471039, 0.11487678438425064, 0.06607837229967117, 0.0483563169836998, -0.01173054426908493, -0.1539774388074875, 0.026989340782165527, 0.04025784879922867, -0.19124165177345276, 0.04079391434788704, 0.08694103360176086, -0.09753528237342834, -0.05202677845954895, -0.0361427366733551, 0.2763848900794983, 0.11055128276348114, -0.09807266294956207, -0.10787709802389145, 0.1593283861875534, -0.09044744819402695, -0.014550719410181046, -0.013175759464502335, -0.1954842507839203, -0.17338010668754578, -0.2335323840379715, 0.09246896207332611, 0.36300235986709595, 0.09598186612129211, -0.17719700932502747, 0.053821999579668045, -0.11677977442741394, -0.012124978005886078, 0.10209283232688904, 0.1530897617340088, -0.008745644241571426, 0.05082784593105316, -0.08224072307348251, 0.0614226758480072, 0.1501639038324356, -0.09588664770126343, -0.04987918213009834, 0.21729464828968048, -0.050959691405296326, 0.10210547596216202, 0.04017883539199829, -0.01896556466817856, -0.093389593064785, 0.03875189274549484, -0.08343469351530075, 0.025276564061641693, 0.05463620275259018, -0.07922526448965073, -0.06038445234298706, 0.05905422568321228, -0.17931686341762543, 0.0898800939321518, -0.012743934988975525, -0.03877785801887512, -0.004718668758869171, -0.06470093131065369, -0.131295308470726, -0.04685156047344208, 0.13748934864997864, -0.28045785427093506, 0.23786547780036926, 0.2017388641834259, 0.052667610347270966, 0.1870713084936142, 0.09802237153053284, 0.07056915760040283, 0.02252197265625, -0.045353963971138, -0.19393855333328247, -0.017421327531337738, 0.11406006664037704, 0.008461438119411469, 0.0672500729560852, -0.012140557169914246]]
    m_test = MinHash(num_perm=128)
    for d in m_test_str:
        m_test.update(d)
    print(lsh.query(m_test))
